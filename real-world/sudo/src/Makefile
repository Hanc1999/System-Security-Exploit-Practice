#
# Copyright (c) 2011 Todd C. Miller <Todd.Miller@courtesan.com>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# src/Makefile.  Generated from Makefile.in by configure.
#

#### Start of system configuration section. ####

srcdir = .
devdir = $(srcdir)
top_builddir = ..
top_srcdir = ..
incdir = $(top_srcdir)/include

# Compiler & tools to use
CC = gcc
LIBTOOL = $(SHELL) $(top_builddir)/libtool --tag=disable-static

# Our install program supports extra flags...
INSTALL = $(SHELL) $(top_srcdir)/install-sh -c

# Libraries
LT_LIBS = $(top_builddir)/common/libcommon.la $(LIBOBJDIR)libreplace.la
LIBS =   -lutil -ldl    $(LT_LIBS)

# C preprocessor flags
CPPFLAGS = -I$(incdir) -I$(top_builddir) -I$(srcdir) -I$(top_srcdir) -I. 

# Usually -O and/or -g
CFLAGS = -g -D_FORTIFY_SOURCE=0

# Flags to pass to the link stage
LDFLAGS = 
LTLDFLAGS =  -Wc,-static-libgcc

# Where to install things...
prefix = /usr/local
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
sbindir = $(exec_prefix)/sbin
sysconfdir = /etc
libexecdir = $(exec_prefix)/libexec
datarootdir = $(prefix)/share
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
noexecfile = sudo_noexec.so
noexecdir = ${exec_prefix}/libexec

# User and group ids the installed files should be "owned" by
install_uid = 0
install_gid = 0

# OS dependent defines
DEFS =  -D_GNU_SOURCE -D_PATH_SUDO_CONF=\"$(sysconfdir)/sudo.conf\" \
       -DLOCALEDIR=\"$(localedir)\" 

#### End of system configuration section. ####

SHELL = /bin/bash

PROGS = sudo libsudo_noexec.la

OBJS = conversation.o error.o exec.o exec_pty.o get_pty.o net_ifs.o \
       load_plugins.o parse_args.o sudo.o sudo_edit.o tgetpass.o \
       ttysize.o utmp.o 

LIBOBJDIR = $(top_builddir)/compat/

VERSION = 1.8.3p1

all: $(PROGS)

Makefile: $(srcdir)/Makefile.in
	(cd $(top_builddir) && ./config.status --file src/Makefile)

.SUFFIXES: .c .h .lo .o

.c.o:
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $<

.c.lo:
	$(LIBTOOL) --mode=compile $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $<

sudo: $(OBJS) $(LT_LIBS)
	$(LIBTOOL) --mode=link $(CC) -o $@ $(OBJS) $(LDFLAGS) $(LIBS) -static-libtool-libs

libsudo_noexec.la: sudo_noexec.lo
	$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) $(LTLDFLAGS) -o $@ sudo_noexec.lo -avoid-version -rpath $(noexecdir)

sesh: sesh.o
	$(CC) -o $@ sesh.o

pre-install:

install: install-dirs install-binaries install-noexec

install-dirs:
	$(SHELL) $(top_srcdir)/mkinstalldirs $(DESTDIR)$(bindir) \
	    $(DESTDIR)$(noexecdir)

install-binaries: install-dirs $(PROGS)
	$(INSTALL) -b~ -O $(install_uid) -G $(install_gid) -M 04111 sudo $(DESTDIR)$(bindir)/sudo
	rm -f $(DESTDIR)$(bindir)/sudoedit
	ln $(DESTDIR)$(bindir)/sudo $(DESTDIR)$(bindir)/sudoedit
	if [ -f sesh ]; then $(INSTALL) -b~ -O $(install_uid) -G $(install_gid) -M 0111 sesh $(DESTDIR)$(libexecdir)/sesh; fi

install-doc:

install-includes:

# We install sudo_noexec by hand so we can avoid a "lib" prefix
# and a version number.  Since we use LD_PRELOAD, neither is needed.
install-noexec: install-dirs libsudo_noexec.la
	if [ -f .libs/lib$(noexecfile) ]; then $(INSTALL) -b~ -O $(install_uid) -G $(install_gid) -M 0755 .libs/lib$(noexecfile) $(DESTDIR)$(noexecdir)/$(noexecfile); fi

install-plugin:

uninstall:
	-rm -f	$(DESTDIR)$(bindir)/sudo $(DESTDIR)$(bindir)/sudoedit \
		$(DESTDIR)$(libexecdir)/sesh \
		$(DESTDIR)$(noexecdir)/$(noexecfile) \

check:

clean:
	-$(LIBTOOL) --mode=clean rm -f $(PROGS) *.lo *.o *.la *.a stamp-* core *.core core.*

mostlyclean: clean

distclean: clean
	-rm -rf Makefile .libs sudo_usage.h

clobber: distclean

realclean: distclean
	rm -f TAGS tags

cleandir: realclean

# Autogenerated dependencies, do not modify
conversation.o: $(srcdir)/conversation.c $(top_builddir)/config.h \
                $(srcdir)/sudo.h $(top_builddir)/pathnames.h \
                $(incdir)/missing.h $(incdir)/alloc.h $(incdir)/error.h \
                $(incdir)/fileops.h $(incdir)/list.h $(incdir)/gettext.h \
                $(incdir)/sudo_plugin.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/conversation.c
error.o: $(srcdir)/error.c $(top_builddir)/config.h $(incdir)/missing.h \
         $(incdir)/error.h $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/error.c
exec.o: $(srcdir)/exec.c $(top_builddir)/config.h $(srcdir)/sudo.h \
        $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
        $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
        $(incdir)/gettext.h $(srcdir)/sudo_exec.h $(incdir)/sudo_plugin.h \
        $(srcdir)/sudo_plugin_int.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/exec.c
exec_pty.o: $(srcdir)/exec_pty.c $(top_builddir)/config.h $(srcdir)/sudo.h \
            $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
            $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
            $(incdir)/gettext.h $(srcdir)/sudo_exec.h $(incdir)/sudo_plugin.h \
            $(srcdir)/sudo_plugin_int.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/exec_pty.c
get_pty.o: $(srcdir)/get_pty.c $(top_builddir)/config.h $(srcdir)/sudo.h \
           $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
           $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
           $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/get_pty.c
load_plugins.o: $(srcdir)/load_plugins.c $(top_builddir)/config.h \
                $(top_srcdir)/compat/dlfcn.h $(srcdir)/sudo.h \
                $(top_builddir)/pathnames.h $(incdir)/missing.h \
                $(incdir)/alloc.h $(incdir)/error.h $(incdir)/fileops.h \
                $(incdir)/list.h $(incdir)/gettext.h $(incdir)/sudo_plugin.h \
                $(srcdir)/sudo_plugin_int.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/load_plugins.c
net_ifs.o: $(srcdir)/net_ifs.c $(top_builddir)/config.h $(incdir)/missing.h \
           $(incdir)/alloc.h $(incdir)/error.h $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/net_ifs.c
parse_args.o: $(srcdir)/parse_args.c $(top_builddir)/config.h ./sudo_usage.h \
              $(srcdir)/sudo.h $(top_builddir)/pathnames.h $(incdir)/missing.h \
              $(incdir)/alloc.h $(incdir)/error.h $(incdir)/fileops.h \
              $(incdir)/list.h $(incdir)/gettext.h $(incdir)/lbuf.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/parse_args.c
preload.o: $(srcdir)/preload.c $(top_builddir)/config.h $(incdir)/sudo_plugin.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/preload.c
selinux.o: $(srcdir)/selinux.c $(top_builddir)/config.h $(srcdir)/sudo.h \
           $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
           $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
           $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/selinux.c
sesh.o: $(srcdir)/sesh.c $(top_builddir)/config.h $(incdir)/missing.h \
        $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/sesh.c
sudo.o: $(srcdir)/sudo.c $(top_builddir)/config.h $(srcdir)/sudo.h \
        $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
        $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
        $(incdir)/gettext.h $(incdir)/sudo_plugin.h \
        $(srcdir)/sudo_plugin_int.h ./sudo_usage.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/sudo.c
sudo_edit.o: $(srcdir)/sudo_edit.c $(top_builddir)/config.h $(srcdir)/sudo.h \
             $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
             $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
             $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/sudo_edit.c
sudo_noexec.lo: $(srcdir)/sudo_noexec.c $(top_builddir)/config.h \
                $(incdir)/missing.h
	$(LIBTOOL) --mode=compile $(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/sudo_noexec.c
tgetpass.o: $(srcdir)/tgetpass.c $(top_builddir)/config.h $(srcdir)/sudo.h \
            $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
            $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
            $(incdir)/gettext.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/tgetpass.c
ttysize.o: $(srcdir)/ttysize.c $(top_builddir)/config.h $(incdir)/missing.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/ttysize.c
utmp.o: $(srcdir)/utmp.c $(top_builddir)/config.h $(srcdir)/sudo.h \
        $(top_builddir)/pathnames.h $(incdir)/missing.h $(incdir)/alloc.h \
        $(incdir)/error.h $(incdir)/fileops.h $(incdir)/list.h \
        $(incdir)/gettext.h $(srcdir)/sudo_exec.h
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $(DEFS) $(srcdir)/utmp.c
